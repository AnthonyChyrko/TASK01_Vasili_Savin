<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="9" ignored="0" total="168" passed="159">
  <reporter-output>
  </reporter-output>
  <suite name="TestSuite" duration-ms="1535" started-at="2017-06-26T09:41:32Z" finished-at="2017-06-26T09:41:33Z">
    <groups>
    </groups>
    <test name="AutoQA" duration-ms="1535" started-at="2017-06-26T09:41:32Z" finished-at="2017-06-26T09:41:33Z">
      <class name="tests.task0106.Tst0601SumMinAndMax">
        <test-method status="PASS" signature="maxValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="maxValidValue" duration-ms="10" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxValidValue -->
        <test-method status="PASS" signature="maxValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="maxValidValue" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxValidValue -->
        <test-method status="PASS" signature="maxValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="maxValidValue" duration-ms="8" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxValidValue -->
        <test-method status="PASS" signature="maxValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="maxValidValue" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxValidValue -->
        <test-method status="PASS" signature="minValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="minValidValue" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minValidValue -->
        <test-method status="PASS" signature="minValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="minValidValue" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minValidValue -->
        <test-method status="PASS" signature="minValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="minValidValue" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minValidValue -->
        <test-method status="PASS" signature="minValidValue(double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="minValidValue" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minValidValue -->
        <test-method status="PASS" signature="summMinAndMaxValidValue(double, double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="summMinAndMaxValidValue" duration-ms="59" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- summMinAndMaxValidValue -->
        <test-method status="PASS" signature="summMinAndMaxValidValue(double, double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="summMinAndMaxValidValue" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- summMinAndMaxValidValue -->
        <test-method status="PASS" signature="summMinAndMaxValidValue(double, double, double, double)[pri:0, instance:tests.task0106.Tst0601SumMinAndMax@48eff760]" name="summMinAndMaxValidValue" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- summMinAndMaxValidValue -->
      </class> <!-- tests.task0106.Tst0601SumMinAndMax -->
      <class name="tests.task0103.Tst0301Triangle">
        <test-method status="FAIL" signature="getAreaValidValue(double, double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="getAreaValidValue" duration-ms="18" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.5] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.5] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at tests.task0103.Tst0301Triangle.getAreaValidValue(Tst0301Triangle.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAreaValidValue -->
        <test-method status="PASS" signature="getAreaValidValue(double, double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="getAreaValidValue" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAreaValidValue -->
        <test-method status="FAIL" signature="getAreaValidValue(double, double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="getAreaValidValue" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6.0] but found [3.5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6.0] but found [3.5]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at tests.task0103.Tst0301Triangle.getAreaValidValue(Tst0301Triangle.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAreaValidValue -->
        <test-method status="PASS" signature="getPerimeterValidValue(double, double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="getPerimeterValidValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.414213562373095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPerimeterValidValue -->
        <test-method status="PASS" signature="getPerimeterValidValue(double, double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="getPerimeterValidValue" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8.535533905932738]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPerimeterValidValue -->
        <test-method status="PASS" signature="getPerimeterValidValue(double, double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="getPerimeterValidValue" duration-ms="7" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[13.70087712549569]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPerimeterValidValue -->
        <test-method status="PASS" signature="getPerimeterValidValue(double, double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="getPerimeterValidValue" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-323]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPerimeterValidValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpIncorrectValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpIncorrectValue" duration-ms="5" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4.9E-324]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be greater than 0.
	at tests.task0103.Tst0301Triangle.triangleIllegalArgExpIncorrectValue(Tst0301Triangle.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpIncorrectValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpValidValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpValidValue" duration-ms="8" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpValidValue -->
        <test-method status="PASS" signature="triangleIllegalArgExpValidValue(double, double)[pri:0, instance:tests.task0103.Tst0301Triangle@4de8b406]" name="triangleIllegalArgExpValidValue" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triangleIllegalArgExpValidValue -->
      </class> <!-- tests.task0103.Tst0301Triangle -->
      <class name="tests.task0104.Tst0401IsPointInArea">
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="21" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="5" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="5" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="3" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesInArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesInArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesInArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="3" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
        <test-method status="PASS" signature="isPointInArea_ValidValuesOutOfArea(double, double, boolean)[pri:0, instance:tests.task0104.Tst0401IsPointInArea@3c756e4d]" name="isPointInArea_ValidValuesOutOfArea" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPointInArea_ValidValuesOutOfArea -->
      </class> <!-- tests.task0104.Tst0401IsPointInArea -->
      <class name="tests.task0107.Tst0701Solve">
        <test-method status="FAIL" signature="f([Ljava.lang.Double;, [Ljava.lang.Double;)[pri:0, instance:tests.task0107.Tst0701Solve@402f32ff]" name="f" duration-ms="61" started-at="2017-06-26T12:41:33Z" data-provider="dp" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Double;@fad74ee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Double;@1a1d6a08]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at tests.task0107.Tst0701Solve.f(Tst0701Solve.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- tests.task0107.Tst0701Solve -->
      <class name="tests.task0102.Tst0201ExpressionResolve">
        <test-method status="PASS" signature="checkResolveCatchArithmeticExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchArithmeticExpIncorrectValues" duration-ms="75" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[Discriminant must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: Discriminant must be greater than 0.
	at tests.task0102.Tst0201ExpressionResolve.checkResolveCatchArithmeticExpIncorrectValues(Tst0201ExpressionResolve.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchArithmeticExpIncorrectValues -->
        <test-method status="PASS" signature="checkResolveCatchArithmeticExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchArithmeticExpIncorrectValues" duration-ms="12" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[Discriminant must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: Discriminant must be greater than 0.
	at tests.task0102.Tst0201ExpressionResolve.checkResolveCatchArithmeticExpIncorrectValues(Tst0201ExpressionResolve.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchArithmeticExpIncorrectValues -->
        <test-method status="PASS" signature="checkResolveCatchArithmeticExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchArithmeticExpIncorrectValues" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[Discriminant must be greater than 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: Discriminant must be greater than 0.
	at tests.task0102.Tst0201ExpressionResolve.checkResolveCatchArithmeticExpIncorrectValues(Tst0201ExpressionResolve.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchArithmeticExpIncorrectValues -->
        <test-method status="FAIL" signature="checkResolveCatchArithmeticExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchArithmeticExpIncorrectValues" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Tst0201ExpressionResolve.checkResolveCatchArithmeticExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb] should have thrown an exception of type class java.lang.ArithmeticException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Tst0201ExpressionResolve.checkResolveCatchArithmeticExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb] should have thrown an exception of type class java.lang.ArithmeticException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1416)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:695)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchArithmeticExpIncorrectValues -->
        <test-method status="PASS" signature="checkResolveCatchIllegalArgExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchIllegalArgExpIncorrectValues" duration-ms="5" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be not 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be not 0.
	at tests.task0102.Tst0201ExpressionResolve.checkResolveCatchIllegalArgExpIncorrectValues(Tst0201ExpressionResolve.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchIllegalArgExpIncorrectValues -->
        <test-method status="PASS" signature="checkResolveCatchIllegalArgExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchIllegalArgExpIncorrectValues" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be not 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be not 0.
	at tests.task0102.Tst0201ExpressionResolve.checkResolveCatchIllegalArgExpIncorrectValues(Tst0201ExpressionResolve.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchIllegalArgExpIncorrectValues -->
        <test-method status="PASS" signature="checkResolveCatchIllegalArgExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchIllegalArgExpIncorrectValues" duration-ms="4" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameters 'a' and 'b' must be not 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameters 'a' and 'b' must be not 0.
	at tests.task0102.Tst0201ExpressionResolve.checkResolveCatchIllegalArgExpIncorrectValues(Tst0201ExpressionResolve.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchIllegalArgExpIncorrectValues -->
        <test-method status="FAIL" signature="checkResolveCatchIllegalArgExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveCatchIllegalArgExpIncorrectValues" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Tst0201ExpressionResolve.checkResolveCatchIllegalArgExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb] should have thrown an exception of type class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Tst0201ExpressionResolve.checkResolveCatchIllegalArgExpIncorrectValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb] should have thrown an exception of type class java.lang.IllegalArgumentException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1416)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:695)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveCatchIllegalArgExpIncorrectValues -->
        <test-method status="PASS" signature="checkResolveNOCatchArithmeticExpValidValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveNOCatchArithmeticExpValidValues" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveNOCatchArithmeticExpValidValues -->
        <test-method status="PASS" signature="checkResolveNOCatchArithmeticExpValidValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveNOCatchArithmeticExpValidValues" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveNOCatchArithmeticExpValidValues -->
        <test-method status="PASS" signature="checkResolveNOCatchArithmeticExpValidValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveNOCatchArithmeticExpValidValues" duration-ms="5" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveNOCatchArithmeticExpValidValues -->
        <test-method status="PASS" signature="checkResolveNOCatchIllegalArgExpValidValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveNOCatchIllegalArgExpValidValues" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveNOCatchIllegalArgExpValidValues -->
        <test-method status="PASS" signature="checkResolveNOCatchIllegalArgExpValidValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveNOCatchIllegalArgExpValidValues" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveNOCatchIllegalArgExpValidValues -->
        <test-method status="PASS" signature="checkResolveNOCatchIllegalArgExpValidValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveNOCatchIllegalArgExpValidValues" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveNOCatchIllegalArgExpValidValues -->
        <test-method status="PASS" signature="checkResolveNOCatchIllegalArgExpValidValues(double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveNOCatchIllegalArgExpValidValues" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveNOCatchIllegalArgExpValidValues -->
        <test-method status="PASS" signature="checkResolveValidValue(double, double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveValidValue" duration-ms="2" started-at="2017-06-26T12:41:32Z" data-provider="dp5" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveValidValue -->
        <test-method status="PASS" signature="checkResolveValidValue(double, double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveValidValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp5" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-381.96]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveValidValue -->
        <test-method status="PASS" signature="checkResolveValidValue(double, double, double, double)[pri:0, instance:tests.task0102.Tst0201ExpressionResolve@6a2bcfcb]" name="checkResolveValidValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp5" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-3.75]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResolveValidValue -->
      </class> <!-- tests.task0102.Tst0201ExpressionResolve -->
      <class name="tests.task0110.Tst1001Generate">
        <test-method status="FAIL" signature="catchingIllegalArgExceptionInegerMAXValue(int)[pri:0, instance:tests.task0110.Tst1001Generate@6d8a00e3]" name="catchingIllegalArgExceptionInegerMAXValue" duration-ms="9" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at tests.task0110.Tst1001Generate.catchingIllegalArgExceptionInegerMAXValue(Tst1001Generate.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catchingIllegalArgExceptionInegerMAXValue -->
        <test-method status="PASS" signature="catchingIllegalArgExceptionNegativeValue(int)[pri:0, instance:tests.task0110.Tst1001Generate@6d8a00e3]" name="catchingIllegalArgExceptionNegativeValue" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Size can not be a negative number]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Size can not be a negative number
	at tests.task0110.Tst1001Generate.catchingIllegalArgExceptionNegativeValue(Tst1001Generate.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catchingIllegalArgExceptionNegativeValue -->
        <test-method status="PASS" signature="checkReturnedArray(int, [[I)[pri:0, instance:tests.task0110.Tst1001Generate@6d8a00e3]" name="checkReturnedArray" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[[I@4abdb505]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkReturnedArray -->
      </class> <!-- tests.task0110.Tst1001Generate -->
      <class name="tests.task0101.Tst0101Statement">
        <test-method status="PASS" signature="checkIllegalArgExpLargerMAXValue(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkIllegalArgExpLargerMAXValue" duration-ms="14" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Argument must be a 4-digit pisitive number.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Argument must be a 4-digit pisitive number.
	at tests.task0101.Tst0101Statement.checkIllegalArgExpLargerMAXValue(Tst0101Statement.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIllegalArgExpLargerMAXValue -->
        <test-method status="PASS" signature="checkIllegalArgExpLargerMAXValue(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkIllegalArgExpLargerMAXValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp1" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Argument must be a 4-digit pisitive number.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Argument must be a 4-digit pisitive number.
	at tests.task0101.Tst0101Statement.checkIllegalArgExpLargerMAXValue(Tst0101Statement.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIllegalArgExpLargerMAXValue -->
        <test-method status="PASS" signature="checkIllegalArgExpLessMINValue(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkIllegalArgExpLessMINValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Argument must be a 4-digit pisitive number.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Argument must be a 4-digit pisitive number.
	at tests.task0101.Tst0101Statement.checkIllegalArgExpLessMINValue(Tst0101Statement.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIllegalArgExpLessMINValue -->
        <test-method status="PASS" signature="checkIllegalArgExpLessMINValue(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkIllegalArgExpLessMINValue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp2" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483648]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Argument must be a 4-digit pisitive number.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Argument must be a 4-digit pisitive number.
	at tests.task0101.Tst0101Statement.checkIllegalArgExpLessMINValue(Tst0101Statement.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIllegalArgExpLessMINValue -->
        <test-method status="PASS" signature="checkMethIsStatementCorrectValidValuesFalse(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkMethIsStatementCorrectValidValuesFalse" duration-ms="3" started-at="2017-06-26T12:41:32Z" data-provider="dp5" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMethIsStatementCorrectValidValuesFalse -->
        <test-method status="PASS" signature="checkMethIsStatementCorrectValidValuesFalse(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkMethIsStatementCorrectValidValuesFalse" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp5" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1342]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMethIsStatementCorrectValidValuesFalse -->
        <test-method status="PASS" signature="checkMethIsStatementCorrectValidValuesFalse(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkMethIsStatementCorrectValidValuesFalse" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp5" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8991]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMethIsStatementCorrectValidValuesFalse -->
        <test-method status="PASS" signature="checkMethIsStatementCorrectValidValuesTrue(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkMethIsStatementCorrectValidValuesTrue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMethIsStatementCorrectValidValuesTrue -->
        <test-method status="PASS" signature="checkMethIsStatementCorrectValidValuesTrue(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkMethIsStatementCorrectValidValuesTrue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1322]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMethIsStatementCorrectValidValuesTrue -->
        <test-method status="PASS" signature="checkMethIsStatementCorrectValidValuesTrue(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkMethIsStatementCorrectValidValuesTrue" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp4" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7254]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMethIsStatementCorrectValidValuesTrue -->
        <test-method status="PASS" signature="checkNOillegalArgExpValidValues(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkNOillegalArgExpValidValues" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNOillegalArgExpValidValues -->
        <test-method status="PASS" signature="checkNOillegalArgExpValidValues(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkNOillegalArgExpValidValues" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNOillegalArgExpValidValues -->
        <test-method status="PASS" signature="checkNOillegalArgExpValidValues(int)[pri:0, instance:tests.task0101.Tst0101Statement@174d20a]" name="checkNOillegalArgExpValidValues" duration-ms="1" started-at="2017-06-26T12:41:32Z" data-provider="dp3" finished-at="2017-06-26T12:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5555]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNOillegalArgExpValidValues -->
      </class> <!-- tests.task0101.Tst0101Statement -->
      <class name="tests.task0109.Tst0901GenerateArrayAndJoin">
        <test-method status="PASS" signature="catchingIllegalArgException(int)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="catchingIllegalArgException" duration-ms="16" started-at="2017-06-26T12:41:33Z" data-provider="dp4" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Size can not be a negative number]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Size can not be a negative number
	at tests.task0109.Tst0901GenerateArrayAndJoin.catchingIllegalArgException(Tst0901GenerateArrayAndJoin.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catchingIllegalArgException -->
        <test-method status="PASS" signature="catchingIllegalArgException(int)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="catchingIllegalArgException" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp4" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483648]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Size can not be a negative number]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Size can not be a negative number
	at tests.task0109.Tst0901GenerateArrayAndJoin.catchingIllegalArgException(Tst0901GenerateArrayAndJoin.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catchingIllegalArgException -->
        <test-method status="PASS" signature="catchingIllegalArgExceptionInsertPositionBiggerArrayLength([I, [I, int)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="catchingIllegalArgExceptionInsertPositionBiggerArrayLength" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@37d31475]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@27808f31]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[k should be less than arr1 size]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: k should be less than arr1 size
	at tests.task0109.Tst0901GenerateArrayAndJoin.catchingIllegalArgExceptionInsertPositionBiggerArrayLength(Tst0901GenerateArrayAndJoin.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catchingIllegalArgExceptionInsertPositionBiggerArrayLength -->
        <test-method status="PASS" signature="catchingIllegalArgExceptionInsertPositionBiggerArrayLength([I, [I, int)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="catchingIllegalArgExceptionInsertPositionBiggerArrayLength" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@436e852b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@32d2fa64]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[k should be less than arr1 size]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: k should be less than arr1 size
	at tests.task0109.Tst0901GenerateArrayAndJoin.catchingIllegalArgExceptionInsertPositionBiggerArrayLength(Tst0901GenerateArrayAndJoin.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catchingIllegalArgExceptionInsertPositionBiggerArrayLength -->
        <test-method status="PASS" signature="catchingIllegalArgExceptionNegativeInsertPosition([I, [I, int)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="catchingIllegalArgExceptionNegativeInsertPosition" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@1d8d30f7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@3e57cd70]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[k can not be a negative number]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: k can not be a negative number
	at tests.task0109.Tst0901GenerateArrayAndJoin.catchingIllegalArgExceptionNegativeInsertPosition(Tst0901GenerateArrayAndJoin.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catchingIllegalArgExceptionNegativeInsertPosition -->
        <test-method status="PASS" signature="checkJoinTwoArrays([I, [I, int, [I)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="checkJoinTwoArrays" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@9a7504c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@2c039ac6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[I@587d1d39]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkJoinTwoArrays -->
        <test-method status="PASS" signature="checkJoinTwoArrays([I, [I, int, [I)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="checkJoinTwoArrays" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@58c1670b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@6b57696f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[I@5bb21b69]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkJoinTwoArrays -->
        <test-method status="PASS" signature="checkJoinTwoArrays([I, [I, int, [I)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="checkJoinTwoArrays" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@6b9651f3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@38bc8ab5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[I@687080dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkJoinTwoArrays -->
        <test-method status="PASS" signature="checkJoinTwoArrays([I, [I, int, [I)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="checkJoinTwoArrays" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@23d2a7e8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@7a9273a8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[I@26a7b76d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkJoinTwoArrays -->
        <test-method status="PASS" signature="checkLengthArrayPos(int, int)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="checkLengthArrayPos" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp5" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLengthArrayPos -->
        <test-method status="PASS" signature="checkLengthArrayPos(int, int)[pri:0, instance:tests.task0109.Tst0901GenerateArrayAndJoin@5ae9a829]" name="checkLengthArrayPos" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp5" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLengthArrayPos -->
      </class> <!-- tests.task0109.Tst0901GenerateArrayAndJoin -->
      <class name="tests.task0108.Tst0801ArrayExceptionPos">
        <test-method status="PASS" signature="arrayCorrectValues(int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="arrayCorrectValues" duration-ms="3" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayCorrectValues -->
        <test-method status="FAIL" signature="arrayCorrectValues(int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="arrayCorrectValues" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp2" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.OutOfMemoryError">
            <message>
              <![CDATA[Requested array size exceeds VM limit]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.OutOfMemoryError: Requested array size exceeds VM limit
	at main.java.com.epam.Task0108.Array.arrInit(Array.java:18)
	at main.java.com.epam.Task0108.Array.<init>(Array.java:10)
	at tests.task0108.Tst0801ArrayExceptionPos.arrayCorrectValues(Tst0801ArrayExceptionPos.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.OutOfMemoryError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayCorrectValues -->
        <test-method status="FAIL" signature="divisionByZero([I, int, int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="divisionByZero" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp4" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@3d921e20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at main.java.com.epam.Task0108.Array.sum(Array.java:33)
	at tests.task0108.Tst0801ArrayExceptionPos.divisionByZero(Tst0801ArrayExceptionPos.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionByZero -->
        <test-method status="FAIL" signature="divisionByZeroCatchExp([I, int, int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="divisionByZeroCatchExp" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp6" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@36b4cef0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at tests.task0108.Tst0801ArrayExceptionPos.divisionByZeroCatchExp(Tst0801ArrayExceptionPos.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionByZeroCatchExp -->
        <test-method status="PASS" signature="illegalArgExpIncorrectValues(int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="illegalArgExpIncorrectValues" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Size can not be a negative number]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Size can not be a negative number
	at tests.task0108.Tst0801ArrayExceptionPos.illegalArgExpIncorrectValues(Tst0801ArrayExceptionPos.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalArgExpIncorrectValues -->
        <test-method status="PASS" signature="illegalArgExpIncorrectValues(int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="illegalArgExpIncorrectValues" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483648]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Size can not be a negative number]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Size can not be a negative number
	at tests.task0108.Tst0801ArrayExceptionPos.illegalArgExpIncorrectValues(Tst0801ArrayExceptionPos.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalArgExpIncorrectValues -->
        <test-method status="PASS" signature="positiveElementOfArray([I, int, int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="positiveElementOfArray" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp5" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@7ce6a65d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[elements of array should be a positive number]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: elements of array should be a positive number
	at tests.task0108.Tst0801ArrayExceptionPos.positiveElementOfArray(Tst0801ArrayExceptionPos.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveElementOfArray -->
        <test-method status="PASS" signature="summCorrectValues([I, int, int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="summCorrectValues" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@cb51256]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- summCorrectValues -->
        <test-method status="PASS" signature="summCorrectValues([I, int, int)[pri:0, instance:tests.task0108.Tst0801ArrayExceptionPos@573f2bb1]" name="summCorrectValues" duration-ms="0" started-at="2017-06-26T12:41:33Z" data-provider="dp3" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@59906517]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- summCorrectValues -->
      </class> <!-- tests.task0108.Tst0801ArrayExceptionPos -->
      <class name="tests.task0105.Tst0501Pow">
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="61" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@1500955a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@e874448]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@29b5cd00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@60285225]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="6" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@7113b13f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="1" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@45820e51]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="2" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@42d8062c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
        <test-method status="PASS" signature="pow_ValidValues(double, double, double, [D)[pri:0, instance:tests.task0105.Tst0501Pow@7c0e2abd]" name="pow_ValidValues" duration-ms="5" started-at="2017-06-26T12:41:33Z" data-provider="dp1" finished-at="2017-06-26T12:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.7976931348623157E308]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.7976931348623157E308]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[D@6043cd28]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow_ValidValues -->
      </class> <!-- tests.task0105.Tst0501Pow -->
    </test> <!-- AutoQA -->
  </suite> <!-- TestSuite -->
</testng-results>
